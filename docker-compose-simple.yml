version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: work-request-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: work_request_db
      POSTGRES_USER: work_request_user
      POSTGRES_PASSWORD: work_request_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - work-request-network

  # Go Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: work-request-backend
    restart: unless-stopped
    environment:
      - SERVER_PORT=8080
      - SERVER_HOST=0.0.0.0
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=work_request_user
      - DB_PASSWORD=work_request_password
      - DB_NAME=work_request_db
      - DB_SSL_MODE=disable
      - JWT_SECRET=your_super_secret_jwt_key_change_in_production
      - JWT_EXPIRY=24h
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:80,http://frontend:80
    ports:
      - "8080:8080"
    networks:
      - work-request-network

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: work-request-frontend
    restart: unless-stopped
    environment:
      - REACT_APP_API_BASE_URL=http://localhost:8080/api
      - REACT_APP_ENABLE_NOTIFICATIONS=true
      - REACT_APP_ENABLE_EXPORT=true
      - REACT_APP_ENABLE_FILTERS=true
    ports:
      - "3000:80"
    networks:
      - work-request-network

volumes:
  postgres_data:
    driver: local

networks:
  work-request-network:
    driver: bridge
